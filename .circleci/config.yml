version: 2

jobs:

  build:

    docker:

      - image: circleci/python:3.7.3
    working_directory: ~/evobench

    steps:

      - checkout

      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Restoring environment
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "env"

      - run:
          name: Linter
          command: |
            . env/bin/activate
            python -m flake8 --max-line-length=88 ./evobench/

      - run:
          name: Tests
          command: |
            . env/bin/activate
            mkdir test-reports
            python -m pytest -o junit_family=xunit2 --junitxml=test-reports/junit.xml
          

      - run:
          name: Coverage
          command: |
            . env/bin/activate
            python -m pytest --cov=evobench

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

  deploy:

    docker:
      - image: circleci/python:3.7.3

    working_directory: ~/evobench

    steps:

      - checkout

      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Restoring environment
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt
            pip install twine

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "env"

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = rarus" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Create packages
          command: |
            rm -rf dist/*
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: Upload to pypi
          command: |
            . env/bin/activate
            twine upload dist/*


workflows:
  version: 2

  dev:
    jobs:
      - build

  publish:
    jobs:
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*$/

      - deploy:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*$/

